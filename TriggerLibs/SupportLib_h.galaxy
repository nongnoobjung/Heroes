include "TriggerLibs/HeroesLib_h"

//--------------------------------------------------------------------------------------------------
// Library: Support
//--------------------------------------------------------------------------------------------------
// Constants
const string libSprt_gv_performanceTestFPSLogFile = "FPS_Log";
const int libSprt_gv_dataMiningNumberOfManaBuckets = 10;
const int libSprt_gv_dataMiningMaxNumberOfDifferentManaRegenSources = 14;
const fixed libSprt_gv_dataMiningPeriodicSendPeriod = 120.0;

// Structures
struct libSprt_gs_DataMiningPlayerData {
    fixed lv_lastManaValue;
    int[libSprt_gv_dataMiningNumberOfManaBuckets + 1] lv_timeSpentInEachManaBucket;
    fixed[libSprt_gv_dataMiningMaxNumberOfDifferentManaRegenSources + 1] lv_manaRegenAmounts;
};

// Variable Declarations
bool libSprt_gv_performanceTestPerformanceTestRunning;
string[libSprt_gv_dataMiningMaxNumberOfDifferentManaRegenSources + 1] libSprt_gv_dataMiningManaRegenSourceNames;
libSprt_gs_DataMiningPlayerData[libCore_gv_bALMaxPlayers + 1] libSprt_gv_dataMining_PlayerData;
bool libSprt_gv_dEBUGSelectionEnabled;
bool libSprt_gv_dEBUGTalentDebugEnabled;
bool libSprt_gv_dEBUGCombatTextEnabled;
bool libSprt_gv_dEBUGXPTextEnabled;
bool libSprt_gv_dEBUGHeroSelectWait;
bool libSprt_gv_dEBUGHeroMimic;
bool libSprt_gv_dEBUG60SecondPauseOnOff;
fixed libSprt_gv_debug_GameTimeDelta;

// Function Declarations
void libSprt_gf_PerformanceTestStartPerformanceTest (string lp_name);
void libSprt_gf_PerformanceTestStopPerformanceTest ();
void libSprt_gf_PerformanceTestHeroSelectScreen ();
void libSprt_gf_PerformanceTestHeroesIdleBeforeGame ();
void libSprt_gf_PerformanceTestHeroesIdleGameStart ();
void libSprt_gf_PerformanceTestHeroesIdleMinionsFighting ();
void libSprt_gf_PerformanceTestTwoHeroesActiveStart ();
void libSprt_gf_PerformanceTestTwoHeroesActiveInLane ();
void libSprt_gf_PerformanceTestSixHeroesActiveStart ();
void libSprt_gf_PerformanceTestSixHeroesActiveInLane ();
void libSprt_gf_PerformanceTestTenHeroesActiveStart ();
void libSprt_gf_PerformanceTestTenHeroesActiveInLane ();
void libSprt_gf_PerformanceTestChaosTeamDisabled ();
void libSprt_gf_PerformanceTestOrderTeamPushingUnopposed ();
int libSprt_gf_DataMiningGetManaRegenSourceIndex (string lp_name);
void libSprt_gf_DataMiningPeriodicDataSend ();
void libSprt_gf_DataMiningLogManaRegenForPlayer (int lp_player, string lp_regenSourceName, fixed lp_amount);
void libSprt_gf_DataMiningTurnDataMiningTriggersOnOff (bool lp_onOff);
void libSprt_gf_DataMiningSendStartGameEvents ();
void libSprt_gf_DataMiningSendEndOfGameDigests ();
void libSprt_gf_DEBUGStartGame ();
void libSprt_gf_DEBUGSpawnCreepCamps ();
void libSprt_gf_DEBUGToggleSelection ();
void libSprt_gf_DEBUGToggleAllTalentSelection (int lp_player);
fixed libSprt_gf_DebugGameTimeDelta ();

// Trigger Declarations
trigger libSprt_gt_IncludeSupport;
trigger libSprt_gt_AutomatedBuildTest;
trigger libSprt_gt_PerformanceTestSpawnHeroesForHeroesPerformanceTestMap;
trigger libSprt_gt_PerformanceTestRunPerformanceTest;
trigger libSprt_gt_PerformanceTestSetHeroChoices;
trigger libSprt_gt_PerformanceTestGetFPS;
trigger libSprt_gt_PerformanceTestOutputFPSToFile;
trigger libSprt_gt_PerformanceTestMaintainHeroHealth;
trigger libSprt_gt_DataMiningListenForRegenGlobes;
trigger libSprt_gt_DataMiningPeriodicDataSendPeriodicEventTrigger;
trigger libSprt_gt_DEBUGHelphelp;
trigger libSprt_gt_DEBUGPlayerNumberplayernum;
trigger libSprt_gt_DEBUGToggleSelectiontogselection;
trigger libSprt_gt_DEBUGToggleMinionDebugtogminiondebug;
trigger libSprt_gt_DebugToggleShowXPValuestogshowxpvalues;
trigger libSprt_gt_DEBUGStartGamestartgame;
trigger libSprt_gt_DEBUGPauseGameStartTimerpausestart;
trigger libSprt_gt_DEBUGTurnOnNormalCreepCampscreepcamp;
trigger libSprt_gt_DEBUGDestroyInventoryItemsdeleteitems;
trigger libSprt_gt_DEBUGSpawnHerospawnhero;
trigger libSprt_gt_DEBUGSpawnAllHeroesspawnallheroes;
trigger libSprt_gt_DEBUGAIHeroMimicheromimic;
trigger libSprt_gt_DEBUGAISetHerosethero;
trigger libSprt_gt_DEBUGAISetAllHerosetallheroes;
trigger libSprt_gt_DEBUGLevelAIHerosheroxp;
trigger libSprt_gt_DEBUGToggleFloatingCombatTexttogcombattext;
trigger libSprt_gt_DEBUGToggleMinionSpawningtogminionspawn;
trigger libSprt_gt_DEBUGToggleMinionSystemPausedtogminionpause;
trigger libSprt_gt_DEBUGToggleMinionSystemOnOfftogminionsystem;
trigger libSprt_gt_DEBUGToggleTowerSystemOnOfftogtowersystem;
trigger libSprt_gt_DEBUGToggleXPTrickletogtrickle;
trigger libSprt_gt_DEBUGScaleCampscampscale;
trigger libSprt_gt_DEBUGHaveAITakeOverAI;
trigger libSprt_gt_DEBUGAISwapHeroswap;
trigger libSprt_gt_DEBUGAIAvoidPlayersolo;
trigger libSprt_gt_DEBUGAIFollowPlayershare;
trigger libSprt_gt_DEBUGAIAllFollowPlayergroup;
trigger libSprt_gt_DEBUGDisplayHeroAIDebugInfoaidebug;
trigger libSprt_gt_DEBUGDisplayMinionAIDebugInfominiondebug;
trigger libSprt_gt_DEBUGDisplayDefenderAIDebugInfodefenderdebug;
trigger libSprt_gt_DEBUGVictorydebugvictory;
trigger libSprt_gt_DEBUGRefreshCooldownscdr;
trigger libSprt_gt_DEBUGDefeatdebugdefeat;
trigger libSprt_gt_DEBUGToggleHeroAItogheroai;
trigger libSprt_gt_DEBUGStopRegenstopregen;
trigger libSprt_gt_DEBUGTurnOffWeather;
trigger libSprt_gt_DEBUGTeamFightPerfTest;
trigger libSprt_gt_DEBUGToggleJungleCampDebugtogcampdebug;
trigger libSprt_gt_DEBUGTargetJungleCreepState;
trigger libSprt_gt_DEBUGMinionAI;
trigger libSprt_gt_DEBUGUnlockAllyColorSettings;
trigger libSprt_gt_DEBUG60SecondPause;
trigger libSprt_gt_DEBUGTriggerASave;
trigger libSprt_gt_DEBUGHeroIsAlive;
trigger libSprt_gt_DEBUGShortHeroDeath;
trigger libSprt_gt_DEBUGGameTime;
trigger libSprt_gt_DEBUGTemp;

// Library Initialization
void libSprt_InitVariables ();

