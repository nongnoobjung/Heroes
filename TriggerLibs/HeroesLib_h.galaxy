include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: Core
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libCore_ge_GameModes_Normal = 0;
const int libCore_ge_GameModes_Tutorial1 = 1;
const int libCore_ge_GameModes_Tutorial2 = 2;
const int libCore_ge_GameModes_Tutorial3 = 3;
const int libCore_ge_GameModes_TryMe = 4;
const int libCore_ge_FloatingTextType_NormalDamage = 0;
const int libCore_ge_FloatingTextType_MediumDamage = 1;
const int libCore_ge_FloatingTextType_HighDamage = 2;
const int libCore_ge_FloatingTextType_InsaneDamage = 3;
const int libCore_ge_FloatingTextType_Healing = 4;
const int libCore_ge_FloatingTextType_Mana = 5;
const int libCore_ge_FloatingTextType_PositiveStatus = 6;
const int libCore_ge_FloatingTextType_NegativeStatus = 7;
const int libCore_ge_FloatingTextType_XPSmall = 8;
const int libCore_ge_FloatingTextType_XPMedium = 9;
const int libCore_ge_FloatingTextType_XPLarge = 10;
const int libCore_ge_FloatingTextType_BonusDamage = 11;
const int libCore_ge_FloatingTextType_Leashing = 12;
const int libCore_ge_CustomValueIndexes_MinionIndex = 0;
const int libCore_ge_CustomValueIndexes_JungleDefenderCreepCampIndex = 1;
const int libCore_ge_CustomValueIndexes_JungleDefenderAIIndex = 2;
const int libCore_ge_CustomValueIndexes_JungleLanerCreepCampIndex = 3;
const int libCore_ge_CustomValueIndexes_LaneIndex = 4;
const int libCore_ge_CustomValueIndexes_TownIndex = 5;
const int libCore_ge_CustomValueIndexes_TownStructureIndex = 6;
const int libCore_ge_CustomValueIndexes_TownWorkerIndex = 7;
const int libCore_ge_CustomValueIndexes_BarracksIndexForMilitia = 8;
const int libCore_ge_CustomValueIndexes_HeroIsSwappingIndex = 9;
const int libCore_ge_CustomValueIndexes_VehicleLocationTypeIndex = 10;
const int libCore_ge_CustomValueIndexes_VehicleSpawnNode = 11;
const int libCore_ge_CustomValueIndexes_MarineDropGroupIndex = 12;
const int libCore_ge_CustomValueIndexes_MarauderDropGroupIndex = 13;
const int libCore_ge_CustomValueIndexes_WatchTowerIndex = 14;
const int libCore_ge_CustomValueIndexes_DragonballIndex = 15;
const int libCore_ge_CustomValueIndexes_XPBuffAmount = 16;
const int libCore_ge_AnnouncerVOEvents_Null = 0;
const int libCore_ge_AnnouncerVOEvents_GetReadyForBattle = 1;
const int libCore_ge_AnnouncerVOEvents_BattleStartingIn = 2;
const int libCore_ge_AnnouncerVOEvents_Countdown10 = 3;
const int libCore_ge_AnnouncerVOEvents_Countdown5 = 4;
const int libCore_ge_AnnouncerVOEvents_Countdown4 = 5;
const int libCore_ge_AnnouncerVOEvents_Countdown3 = 6;
const int libCore_ge_AnnouncerVOEvents_Countdown2 = 7;
const int libCore_ge_AnnouncerVOEvents_Countdown1 = 8;
const int libCore_ge_AnnouncerVOEvents_LetTheBattleBegin = 9;
const int libCore_ge_AnnouncerVOEvents_YouHaveBeenKilled = 10;
const int libCore_ge_AnnouncerVOEvents_AllyKilled = 11;
const int libCore_ge_AnnouncerVOEvents_EnemyKilledNonparticipants = 12;
const int libCore_ge_AnnouncerVOEvents_EnemyKilledParticipants = 13;
const int libCore_ge_AnnouncerVOEvents_HeroKilledObserver = 14;
const int libCore_ge_AnnouncerVOEvents_DoubleKill = 15;
const int libCore_ge_AnnouncerVOEvents_TripleKill = 16;
const int libCore_ge_AnnouncerVOEvents_QuadraKill = 17;
const int libCore_ge_AnnouncerVOEvents_PentaKill = 18;
const int libCore_ge_AnnouncerVOEvents_TeamKill = 19;
const int libCore_ge_AnnouncerVOEvents_BlueTeamKilled = 20;
const int libCore_ge_AnnouncerVOEvents_RedTeamKilled = 21;
const int libCore_ge_AnnouncerVOEvents_AllyFirstBlood = 22;
const int libCore_ge_AnnouncerVOEvents_EnemyFirstBlood = 23;
const int libCore_ge_AnnouncerVOEvents_BlueTeamFirstBlood = 24;
const int libCore_ge_AnnouncerVOEvents_RedTeamFirstBlood = 25;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeStart = 26;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeEndYou = 27;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeUpgrade1Mayhem = 28;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeUpgrade2Untouchable = 29;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeUpgrade3HeroOfTheStorm = 30;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeUpgrade4AllStarDEP = 31;
const int libCore_ge_AnnouncerVOEvents_APlayerHasLeftTheGame = 32;
const int libCore_ge_AnnouncerVOEvents_APlayerHasRejoinedTheGame = 33;
const int libCore_ge_AnnouncerVOEvents_GravestoneRevive = 34;
const int libCore_ge_AnnouncerVOEvents_AlliedOutpostDestroyed = 35;
const int libCore_ge_AnnouncerVOEvents_EnemyOutpostDestroyed = 36;
const int libCore_ge_AnnouncerVOEvents_AlliedKeepDestroyed = 37;
const int libCore_ge_AnnouncerVOEvents_EnemyKeepDestroyed = 38;
const int libCore_ge_AnnouncerVOEvents_BlueTeamDestroysTown = 39;
const int libCore_ge_AnnouncerVOEvents_RedTeamDestroysTown = 40;
const int libCore_ge_AnnouncerVOEvents_AlliedCoreUnderAttack = 41;
const int libCore_ge_AnnouncerVOEvents_BlueTeamCoreUnderAttack = 42;
const int libCore_ge_AnnouncerVOEvents_RedTeamCoreUnderAttack = 43;
const int libCore_ge_AnnouncerVOEvents_Victory = 44;
const int libCore_ge_AnnouncerVOEvents_Defeat = 45;
const int libCore_ge_AnnouncerVOEvents_BlueTeamWins = 46;
const int libCore_ge_AnnouncerVOEvents_RedTeamWins = 47;
const int libCore_ge_AnnouncerVOEvents_AlliesCaptureMercCamp = 48;
const int libCore_ge_AnnouncerVOEvents_EnemiesCaptureMercCamp = 49;
const int libCore_ge_AnnouncerVOEvents_BlueTeamCapturesMercCamp = 50;
const int libCore_ge_AnnouncerVOEvents_RedTeamCapturesMercCamp = 51;
const int libCore_ge_AnnouncerVOEvents_LevelUp = 52;
const int libCore_ge_AnnouncerVOEvents_TalentUnlocked = 53;
const int libCore_ge_AnnouncerVOEvents_EventCount = 54;
const int libCore_ge_AnnouncerVOEvents_GamePaused = 55;
const int libCore_ge_AnnouncerVOEvents_GameResumed = 56;
string libCore_ge_AnnouncerVOEvents_Ident (int lp_val);
const int libCore_ge_ArtifactTier_Gem = 0;
const int libCore_ge_ArtifactTier_Glyph = 1;
const int libCore_ge_ArtifactTier_Trinket = 2;
const int libCore_ge_VehicleUnitTypes_None = 0;
const int libCore_ge_VehicleUnitTypes_LightCycle = 1;
const int libCore_ge_VehicleUnitTypes_SCV = 2;
const int libCore_ge_VehicleUnitTypes_Infestor = 3;
const int libCore_ge_VehicleUnitTypes_FalstadVehicle = 4;
const int libCore_ge_VehicleUnitTypes_MekkatorqueVehicle = 5;
const int libCore_ge_VehicleUnitTypes_Trebuchet = 6;
const int libCore_ge_VehicleUnitTypes_Ogrenaut = 7;
const int libCore_ge_VehicleUnitTypes_DragonKnight = 8;
const int libCore_ge_VehicleUnitTypes_GardensDragon = 9;
const int libCore_ge_VehicleUnitTypes_VehicleCount = 10;
const int libCore_ge_HeroVOEvents_Null = 0;
const int libCore_ge_HeroVOEvents_Revive = 1;
const int libCore_ge_HeroVOEvents_Healed = 2;
const int libCore_ge_HeroVOEvents_Resurrected = 3;
const int libCore_ge_HeroVOEvents_Pissed = 4;
const int libCore_ge_HeroVOEvents_GenericKill = 5;
const int libCore_ge_HeroVOEvents_TeamKilled = 6;
const int libCore_ge_HeroVOEvents_Laugh = 7;
const int libCore_ge_HeroVOEvents_EndEnemyKillingSpree = 8;
const int libCore_ge_HeroVOEvents_TalentChosen = 9;
const int libCore_ge_HeroVOEvents_Celebrate = 10;
const int libCore_ge_HeroVOEvents_WorthIt = 11;
const int libCore_ge_HeroVOEvents_Comeback = 12;
const int libCore_ge_HeroVOEvents_AIRetreat = 13;
const int libCore_ge_HeroVOEvents_AIGoodJob = 14;
const int libCore_ge_HeroVOEvents_AIOnMyWay = 15;
const int libCore_ge_HeroVOEvents_AIMercCapture = 16;
const int libCore_ge_HeroVOEvents_AICaution = 17;
const int libCore_ge_HeroVOEvents_AIAttack = 18;
const int libCore_ge_HeroVOEvents_AIUhOh = 19;
const int libCore_ge_HeroVOEvents_AIHeal = 20;
const int libCore_ge_HeroVOEvents_PingAttackHere = 21;
const int libCore_ge_HeroVOEvents_PingDefendHere = 22;
const int libCore_ge_HeroVOEvents_PingAttackTown = 23;
const int libCore_ge_HeroVOEvents_PingDefendTown = 24;
const int libCore_ge_HeroVOEvents_PingAttackWatchTower = 25;
const int libCore_ge_HeroVOEvents_PingDefendWatchTower = 26;
const int libCore_ge_HeroVOEvents_PingAttackCore = 27;
const int libCore_ge_HeroVOEvents_PingDefendCore = 28;
const int libCore_ge_HeroVOEvents_PingAttackMercCamp = 29;
const int libCore_ge_HeroVOEvents_PingKillHero = 30;
const int libCore_ge_HeroVOEvents_PingAssistHero = 31;
const int libCore_ge_HeroVOEvents_PingAssistMe = 32;
const int libCore_ge_HeroVOEvents_IntroQuestion = 33;
const int libCore_ge_HeroVOEvents_IntroResponse = 34;
const int libCore_ge_HeroVOEvents_IntroBoast = 35;
const int libCore_ge_HeroVOEvents_IntroAgree = 36;
const int libCore_ge_HeroVOEvents_VOXGetHit = 37;
const int libCore_ge_HeroVOEvents_VOXGetHitLarge = 38;
const int libCore_ge_HeroVOEvents_VOXGetHitSmall = 39;
const int libCore_ge_HeroVOEvents_Hello = 40;
const int libCore_ge_HeroVOEvents_Thanks = 41;
const int libCore_ge_HeroVOEvents_WellPlayed = 42;
const int libCore_ge_HeroVOEvents_Sorry = 43;
const int libCore_ge_HeroVOEvents_Goodbye = 44;
const int libCore_ge_HeroVOEvents_Cheer = 45;
const int libCore_ge_MinionTypes_Null = 0;
const int libCore_ge_MinionTypes_Footmen = 1;
const int libCore_ge_MinionTypes_Wizard = 2;
const int libCore_ge_MinionTypes_Ranged = 3;
const int libCore_ge_MinionTypes_Catapult = 4;
const int libCore_ge_MinionTypes_CustomMelee1 = 5;
const int libCore_ge_MinionTypes_CustomRanged1 = 6;
const int libCore_ge_MinionTypes_CustomCaster1 = 7;
const int libCore_ge_MinionTypes_CustomCatapult1 = 8;
const int libCore_ge_MinionTypes_CustomMelee2 = 9;
const int libCore_ge_MinionTypes_CustomRanged2 = 10;
const int libCore_ge_MinionTypes_CustomCaster2 = 11;
const int libCore_ge_MinionTypes_CustomCatapult2 = 12;
const int libCore_ge_MinionWaveCompositions_Null = 0;
const int libCore_ge_MinionWaveCompositions_Standard = 1;
const int libCore_ge_MinionWaveCompositions_Necro = 2;
const int libCore_ge_MinionWaveCompositions_Shaman = 3;
const int libCore_ge_SegregationTriggerTypes_DefenderAIIssueOrdersToCreep = 0;
const int libCore_ge_SegregationTriggerTypes_HeroAIInitializeHeroTierData = 1;
const int libCore_ge_SegregationTriggerTypes_HeroAIInitAbilities = 2;
const int libCore_ge_SegregationTriggerTypes_HeroAIEnableAIForPlayer = 3;
const int libCore_ge_SegregationTriggerTypes_HeroAIDebuggingUpdateStatus = 4;
const int libCore_ge_SegregationTriggerTypes_HeroAIMapMechanicPinged = 5;
const int libCore_ge_SegregationTriggerTypes_HeroAIFollowerNearbyMapObjective = 6;
string libCore_ge_SegregationTriggerTypes_Ident (int lp_val);
const int libCore_ge_TalentBucketTierType_Null = 0;
const int libCore_ge_TalentBucketTierType_NormalTalent = 1;
const int libCore_ge_TalentBucketTierType_HeroicAbility = 2;
const int libCore_ge_TalentBucketTierType_StormTalent = 3;
const int libCore_ge_ABChoiceNames_Null = 0;
const int libCore_ge_ABChoiceNames_CombatStyle = 1;
const int libCore_ge_ABChoiceNames_HeroicAbility = 2;
const int libCore_ge_ABChoiceNames_Mastery = 3;
const int libCore_ge_ABChoiceNames_Mount = 4;
const int libCore_ge_ABChoiceNames_Talent = 5;
const int libCore_ge_ReticleType_MainObjective = 0;
const int libCore_ge_ReticleType_BonusObjective = 1;
const int libCore_ge_ReticleType_Enemy = 2;
const int libCore_ge_ReticleSize_Large = 0;
const int libCore_ge_ReticleSize_Medium = 1;
const int libCore_ge_ReticleSize_Small = 2;
const int libCore_ge__UnitDataType_Actor = 0;
const int libCore_ge__UnitDataType_Integer = 1;
const int libCore_ge__UnitDataType_Ping = 2;
const int libCore_ge__UnitDataType_Point = 3;
const int libCore_ge__UnitDataType_Region = 4;
const int libCore_ge__UnitDataType_TextTag = 5;
const int libCore_ge__UnitDataType_Unit = 6;
const int libCore_ge__UnitDataType_UnitGroup = 7;
const int libCore_ge_TransmissionPortraitOptioins_LeavePortraitVisibleAfter = 0;
const int libCore_ge_TransmissionPortraitOptioins_HidePortraitAfter = 1;
const int libCore_ge_TransmissionPortraitOptioins_DontShowPortrait = 2;
const int libCore_ge_TransmissionCueSoundOptions_DefaultCueSoundBehavior = 0;
const int libCore_ge_TransmissionCueSoundOptions_PlayCueSound = 1;
const int libCore_ge_TransmissionCueSoundOptions_DontPlayCueSound = 2;
const int libCore_ge_TransmissionOptions_ChatBubble = 0;

// Constants
const bool libCore_gv_dEBUGUseNewTalentBucketSystem = true;
const int libCore_gv_maxMapSoundtracks_C = 3;
const int libCore_gv_allySide = 1;
const int libCore_gv_enemySide = 2;
const fixed libCore_gv_floatingCombatTextStandardDuration = 2.5;
const int libCore_gv_data_MaxRequiredRewards_C = 8;
const int libCore_gv_dataAnnouncerVONumberOfAnnouncerPacks = 2;
const int libCore_gv_dataAnnouncerVOMaxNumberOfAnnouncerEvents = 70;
const int libCore_gv_artifacts_MaxArtifactGemCount = 10;
const int libCore_gv_artifacts_MaxArtifactGlyphCount = 10;
const int libCore_gv_artifacts_MaxArtifactTrinketCount = 10;
const int libCore_gv_artifacts_MaxArtifactEntryCount = 30;
const int libCore_gv_artifacts_MaxArtifactsPerPlayer_C = 3;
const int libCore_gv_artifacts_MaxArtifactRank_C = 10;
const int libCore_gv_cOLOROrderPlayerColor = 0;
const int libCore_gv_cOLORChaosPlayerColor = 14;
const int libCore_gv_cOLORHostilePlayerColor = 1;
const int libCore_gv_cOLORNeutralPlayerColor = 5;
const fixed libCore_gv_bALMeleePlaceholder2SplashDamagePercentage = 0.25;
const fixed libCore_gv_bALHealAreaonHitSplashHealingPercentage = 0.4;
const fixed libCore_gv_bALRangedPlaceholder2DoTDamagePercentage = 1.0;
const fixed libCore_gv_bALRangedPlaceholder2DoTNumberofTics = 4.0;
const fixed libCore_gv_bALHeroDiabloMoltenFistDoT = 0.2;
const string libCore_gv_debugPathDebugOutput = "Debug_Output";
const string libCore_gv_debugPathScoreValueLog = "ScoreValueLog";
const string libCore_gv_debugPathEncouragementDataTrackingLog = "EncouragementDataLog";
const string libCore_gv_debugPathDeathTimerRenderPrioritiesLog = "DeathTimerRenderPriorities";
const fixed libCore_gv_bALHeroSelectTime = 60.0;
const fixed libCore_gv_bALOpenTheGatesDelay = 35.0;
const fixed libCore_gv_bALSpawnMinionsDelay = 5.0;
const fixed libCore_gv_bALJungleWatchTowerActivationDelay = 5.0;
const fixed libCore_gv_bALXPTrickleStartDelay = 35.0;
const int libCore_gv_dEPDataGhostStatusBarsMaxCount = 1;
const int libCore_gv_dataMaxCatalogChangesPerAbility = 25;
const int libCore_gv_heroes_MaxSkinsPerHero_C = 64;
const int libCore_gv_data_MaxHeroAllowedMountCategories_C = 8;
const int libCore_gv_dataHeroesMaxHeroCount = 50;
const int libCore_gv_dataHeroesNumberOfHeroClasses = 4;
const int libCore_gv_dataHeroesMaxAlternateHeroes = 3;
const int libCore_gv_dataHeroesMaxAbilitiesPerHero = 10;
const int libCore_gv_dataHeroesMaxBasicAbilitiesPerHero = 3;
const int libCore_gv_dataHeroesMaxHeroicAbilitiesPerHero = 2;
const int libCore_gv_dataHeroesMaxTraitAbilitiesPerHero = 1;
const int libCore_gv_dataHeroVOMaxNumberOfHeroVOEvents = 48;
const int libCore_gv_killingSpree_KillThresholdCount_C = 4;
const int libCore_gv_killingSpree_KillThresholdBase_C = 5;
const int libCore_gv_killingSpree_KillThresholdUpgrade1_C = 10;
const int libCore_gv_killingSpree_KillThresholdUpgrade2_C = 15;
const int libCore_gv_killingSpree_KillThresholdUpgrade3_C = 20;
const int libCore_gv_dataMinionTypeCount = 16;
const int libCore_gv_dataMinionWaveCompositionCount = 1;
const int libCore_gv_dataMinionWaveCompositionMaxGroupCount = 5;
const int libCore_gv_dataMountsMaxMountCount = 64;
const int libCore_gv_dataMountsMaxActorMessageCount = 16;
const int libCore_gv_dataScalingMaxScalingTicks = 60;
const int libCore_gv_cOMPUTER_Neutral = 0;
const int libCore_gv_cOMPUTER_TeamOrder = 11;
const int libCore_gv_cOMPUTER_TeamChaos = 12;
const int libCore_gv_cOMPUTER_Hostile = 15;
const int libCore_gv_oBSERVER_ObserverUIPlayer = 13;
const int libCore_gv_bALMaxTeams = 2;
const int libCore_gv_bALMaxPlayers = 10;
const int libCore_gv_bALMaxPlayersOnATeam = 5;
const int libCore_gv_bALMaxEnginePlayerCount = 15;
const int libCore_gv_bALMaxLevel = 30;
const fixed libCore_gv_bALXPRadius = 12.75;
const fixed libCore_gv_bALHeroKillXPRadius = 20.0;
const fixed libCore_gv_bALRecentDamageResetTime = 5.0;
const int libCore_gv_bALPlayerActiveInventorySlots = 6;
const int libCore_gv_bALPlayerTotalInventorySlots = 6;
const fixed libCore_gv_bALDiabloSoulstoneDeathTime = 5.0;
const fixed libCore_gv_bALMurkyWithEggDeathTime = 5.0;
const fixed libCore_gv_bALTyraelPassiveDeathTimeReduction = 10.0;
const int libCore_gv_segregationTriggerTypesMax = 20;
const int libCore_gv_segregationTriggerCountPerType = 20;
const int libCore_gv_dataSkinsMaxSkinCount = 512;
const int libCore_gv_dataSkinsMaxActorMessageCount = 32;
const int libCore_gv_data_MaxSkinAllowedMountCategories_C = 2;
const int libCore_gv_dataTalentsNumberOfUltChoicesPerHero = 2;
const int libCore_gv_bALHeroSwapDelay = 1;
const fixed libCore_gv_bALHeroSwapUltCooldown = 30.0;
const int libCore_gv_talents_MaxTalentProfileEntryCount_C = 60;
const int libCore_gv_talents_MaxDefaultTalentProfilesPerHero_C = 5;
const int libCore_gv_talents_MaxCustomTalentProfilesPerHero_C = 5;
const int libCore_gv_talents_MaxTalentEntryCount_C = 888;
const int libCore_gv_talents_MaxTalentsPerHero_C = 42;
const int libCore_gv_talents_MaxTalentPoints_C = 32;
const int libCore_gv_talents_MaxTalentRank_C = 1;
const int libCore_gv_talents_MaxTalentBehaviorsPerRank_C = 5;
const int libCore_gv_talents_MaxModifedAbilitiesPerTalent_C = 7;
const int libCore_gv_talents_DefaultProfileIndex_C = 1;
const int libCore_gv_talents_AutobuyProfileIndex_C = 2;
const int libCore_gv_talentsBucket_MaxTiers_C = 7;
const int libCore_gv_talentsBucket_MaxTalentsPerTier_C = 10;
const int libCore_gv_talentsBucket_MaxPicksPerTier_C = 3;
const int libCore_gv_talentsBucket_MaxHeroicPicks_C = 2;
const int libCore_gv_talentsBucket_MaxPicksPerTier_DEBUG_C = libCore_gv_talentsBucket_MaxTalentsPerTier_C;
const int libCore_gv_talentsBucket_MaxTalentEntryCount_C = 42;
const int libCore_gv_talents_NumberOfABChoices_C = 4;
const int libCore_gv_talentsBucket_NumberOfABChoices = libCore_gv_talentsBucket_MaxTiers_C;
const int libCore_gv_talents_MaxABChoiceButtonCount_C = 3;
const int libCore_gv_talents_MaxABChoiceButtonCount_DEBUG_C = libCore_gv_talentsBucket_MaxTalentsPerTier_C;
const fixed libCore_gv_talents_Executioner1BonusDamage_C = 0.5;
const fixed libCore_gv_talents_Executioner2BonusDamage_C = 0.5;
const fixed libCore_gv_talents_Demolitionist1Struct_C = 0.4;
const fixed libCore_gv_talents_Demolitionist2Struct_C = 0.8;
const fixed libCore_gv_talents_Demolitionist3Struct_C = 0.9;
const fixed libCore_gv_talents_Demolitionist1Minions_C = 0.3;
const fixed libCore_gv_talents_Demolitionist2Minions_C = 0.6;
const fixed libCore_gv_talents_Demolitionist3Minions_C = 0.6;
const fixed libCore_gv_talents_ConstantHeroism1 = 0.15;
const fixed libCore_gv_talents_ConstantHeroism2 = 0.3;
const fixed libCore_gv_talents_Bucket_ConstantHeroism_C = 0.3;
const fixed libCore_gv_talents_Vampirism1SpellVampHealthHeroAmount_C = 0.05;
const fixed libCore_gv_talents_Vampirism1SpellVampHealthNonHeroAmount_C = 0.025;
const fixed libCore_gv_talents_Vampirism2SpellVampHealthHeroAmount_C = 0.1;
const fixed libCore_gv_talents_Vampirism2SpellVampHealthNonHeroAmount_C = 0.05;
const fixed libCore_gv_talents_Vampirism3SpellVampHealthHeroAmount_C = 0.15;
const fixed libCore_gv_talents_Vampirism3SpellVampHealthNonHeroAmount_C = 0.075;
const fixed libCore_gv_talents_Vampirism1SpellVampEnergyHeroAmount_C = 0.02;
const fixed libCore_gv_talents_Vampirism1SpellVampEnergyNonHeroAmount_C = 0.01;
const fixed libCore_gv_talents_Vampirism2SpellVampEnergyHeroAmount_C = 0.04;
const fixed libCore_gv_talents_Vampirism2SpellVampEnergyNonHeroAmount_C = 0.02;
const fixed libCore_gv_talents_Vampirism3SpellVampEnergyHeroAmount_C = 0.06;
const fixed libCore_gv_talents_Vampirism3SpellVampEnergyNonHeroAmount_C = 0.03;
const fixed libCore_gv_talents_ExpertMarksmanBehaviorReduction_C = 1.0;
const fixed libCore_gv_talents_0ManaCostBuffMod_C = 1.0;
const fixed libCore_gv_talents_OverdriveManaCostIncreasePercent_C = 0.5;
const fixed libCore_gv_talents_BucketOverdriveManaCostIncreasePercent_C = 0.4;
const fixed libCore_gv_bALNecromancyDamageLeech = 0.05;
const fixed libCore_gv_bALZeratulPrelateScythesShieldReturns = 0.01;
const fixed libCore_gv_bAL33PercentCCReduction = 0.33;
const fixed libCore_gv_bAL6PercentCCReduction = 0.6;
const fixed libCore_gv_bAL5PercentCCReduction = 0.5;
const fixed libCore_gv_bAL4JuggernautCCReduction = 0.4;
const fixed libCore_gv_bALExecutionerDamagePercentage = 0.5;
const fixed libCore_gv_bALBloodletterLifeStealRate = 0.15;
const fixed libCore_gv_data_Vehicles_TownVehicleRespawnTime_C = 60.0;
const fixed libCore_gv_data_Vehicles_TownVehicleInitialSpawnTime_C = 300.0;
const int libCore_gv_data_Vehicles_MaxVehicleSpawnPoints_C = 3;
const fixed libCore_gv_data_WatchTower_CaptureTime_C = 1.5;
const fixed libCore_gv_data_WatchTower_CaptureRadius_C = 4.0;
const int libCore_gv_data_UnitWithXP_Count_C = 100;
const fixed libCore_gv_data_XP_TricklePeriod_C = 1.0;
const fixed libCore_gv_data_XP_TrickleAmount_C = 20.0;
const fixed libCore_gv_data_XP_SiegeGiantCapture_C = 0.0;
const fixed libCore_gv_data_XP_OgreCapture_C = 0.0;
const fixed libCore_gv_data_XP_GraveGolemCapture_C = 0.0;
const fixed libCore_gv_data_XP_HeroValuePerLevel_C = 50.0;
const fixed libCore_gv_data_XP_MurkyValuePerLevel_C = 12.5;
const fixed libCore_gv_data_XP_MurkyEggValuePerLevel_C = 25.0;
const int libCore_gv_data_XP_HeroLevelModifier_C = 5;
const fixed libCore_gv_data_XP_Hero1PositiveLevelGapMultiplier_C = 0.25;
const fixed libCore_gv_data_XP_Hero1NegativeLevelGapMultiplier_C = 0.25;
const fixed libCore_gv_data_XP_Hero2PositiveLevelGapMultiplier_C = 0.5;
const fixed libCore_gv_data_XP_Hero2NegativeLevelGapMultiplier_C2 = 0.5;
const fixed libCore_gv_data_XP_Hero3PositiveLevelGapMultiplier_C = 0.75;
const fixed libCore_gv_data_XP_Hero3NegativeLevelGapMultiplier_C2 = 0.75;
const fixed libCore_gv_data_XP_Hero4PositiveLevelGapMultiplier_C = 1.0;
const fixed libCore_gv_data_XP_Hero4NegativeLevelGapMultiplier_C2 = 0.95;
const fixed libCore_gv_data_XP_Hero5PositiveLevelGapMultiplier_C = 1.0;
const fixed libCore_gv_data_XP_Hero5NegativeLevelGapMultiplier_C2 = 0.95;
const string libCore_gv_eventID_IncludeModInit_C = "IncludeModInitialization";

// Structures
struct libCore_gs_AnnouncerVOPack {
    text lv_name;
    string lv_stringName;
    string[libCore_gv_dataAnnouncerVOMaxNumberOfAnnouncerEvents + 1] lv_soundLinkArray;
};

struct libCore_gs_ArtifactRankData {
    string lv_item;
    string lv_upgrade;
    int lv_behaviorCount;
    string[libCore_gv_talents_MaxTalentBehaviorsPerRank_C + 1] lv_behaviors;
    fixed lv_abilityPower;
    fixed lv_cooldownReduction;
    fixed lv_attackDamage;
    fixed lv_increaseAttackSpeed;
    fixed lv_increaseMovementSpeed;
    fixed lv_siegeDamage;
    fixed lv_lifesteal;
    fixed lv_hitPoints;
    fixed lv_shields;
    fixed lv_mana;
    fixed lv_manaRegen;
    fixed lv_hitPointRegen;
    fixed lv_hitPointRegenFraction;
    fixed lv_amplifedHealing;
    fixed lv_cCReduction;
    fixed lv_deathTimeReduction;
    fixed lv_increaseMountSpeed;
};

struct libCore_gs_ArtifactData {
    string lv_artifactCatalogLink;
    string lv_artifactTalentCatalogLink;
    text lv_name;
    libCore_gs_ArtifactRankData[libCore_gv_artifacts_MaxArtifactRank_C + 1] lv_rankData;
    int lv_rankCount;
    int lv_tier;
    string[libCore_gv_data_MaxRequiredRewards_C + 1] lv_requiredRewardArray;
    int lv_requiredRewardCount;
};

struct libCore_gs_DEPGhostStatusBarsData {
    string lv_behaviorLink;
    string lv_effectLink;
    bool lv_percentageBased;
    fixed[libCore_gv_bALMaxPlayers + 1] lv_tickPeriod;
    fixed[libCore_gv_bALMaxPlayers + 1] lv_hPTickAmount;
    fixed[libCore_gv_bALMaxPlayers + 1] lv_manaTickAmount;
};

struct libCore_gs_HeroClassData {
    text lv_name;
    text lv_description;
    string lv_icon;
    int[libCore_gv_dataHeroesMaxHeroCount + 1] lv_heroesInTheClass;
    int lv_numberOfHeroesInTheClass;
};

struct libCore_gs_HeroCatalogChangeData {
    int[libCore_gv_dataHeroesMaxAbilitiesPerHero + 1] lv_numberOfFieldChanges;
    bool[libCore_gv_dataHeroesMaxAbilitiesPerHero + 1] lv_abilityIsHeroic;
    int[libCore_gv_dataHeroesMaxAbilitiesPerHero + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_catalog;
    string[libCore_gv_dataHeroesMaxAbilitiesPerHero + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_entry;
    string[libCore_gv_dataHeroesMaxAbilitiesPerHero + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_field;
    bool[libCore_gv_dataHeroesMaxAbilitiesPerHero + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_fieldIsInteger;
    fixed[libCore_gv_dataHeroesMaxAbilitiesPerHero + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_valueAddedPerLevel;
    bool[libCore_gv_dataHeroesMaxAbilitiesPerHero + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_affectedByAbilityPower;
    bool[libCore_gv_dataHeroesMaxAbilitiesPerHero + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_affectedByHealingPower;
    bool[libCore_gv_dataHeroesMaxAbilitiesPerHero + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_affectedByOverdrive;
};

struct libCore_gs_HeroTalentArrayData {
    int lv_talentIndex;
    int lv_tier;
    int lv_column;
};

struct libCore_gs_ABChoiceData {
    string[libCore_gv_talents_MaxABChoiceButtonCount_DEBUG_C + 1] lv_icon;
    text[libCore_gv_talents_MaxABChoiceButtonCount_DEBUG_C + 1] lv_tooltipSimple;
    text[libCore_gv_talents_MaxABChoiceButtonCount_DEBUG_C + 1] lv_tooltipExpanded;
    int[libCore_gv_talents_MaxABChoiceButtonCount_DEBUG_C + 1] lv_behaviorCount;
    string[libCore_gv_talents_MaxABChoiceButtonCount_DEBUG_C + 1][libCore_gv_talents_MaxTalentBehaviorsPerRank_C + 1] lv_behaviors;
    bool[libCore_gv_talents_MaxABChoiceButtonCount_DEBUG_C + 1] lv_isMastery;
    bool[libCore_gv_talents_MaxABChoiceButtonCount_DEBUG_C + 1] lv_enabled;
};

struct libCore_gs_HeroAbilityData {
    string lv_ability;
    bool lv_isHeroic;
    bool lv_isAffectedByCooldownReduction;
    bool lv_isTrait;
    bool lv_usesCharges;
    bool lv_isAffectedByOverdrive;
};

struct libCore_gs_HeroData {
    string lv_heroCatalogLink;
    string[libCore_gv_data_MaxRequiredRewards_C + 1] lv_requiredRewardArray;
    int lv_requiredRewardCount;
    string lv_unitType;
    int lv_class;
    int lv_universe;
    int lv_gender;
    text lv_description;
    bool lv_isFlyer;
    bool lv_isMelee;
    bool lv_isCaster;
    int lv_numberOfAlternateUnitTypes;
    string[libCore_gv_dataHeroesMaxAlternateHeroes + 1] lv_alternateUnitTypes;
    libCore_gs_HeroAbilityData[libCore_gv_dataHeroesMaxAbilitiesPerHero + 1] lv_abilities;
    int lv_numberOfAbilities;
    string lv_portrait;
    string lv_leaderboardImage;
    string lv_heroSelectScreenButtonPortrait;
    string lv_heroSelectScreenBackgroundImage;
    int lv_introCutsceneSize;
    string[libCore_gv_heroes_MaxSkinsPerHero_C + 1] lv_skinArray;
    int lv_skinCount;
    bool lv_usesMounts;
    libCore_gs_HeroCatalogChangeData lv_levelUpModificationData;
    int lv_levelUpAbilitiesCount;
    int lv_talentCount;
    int[libCore_gv_talents_MaxTalentEntryCount_C + 1] lv_talentToButtonMap;
    int lv_talentProfileCount;
    int[libCore_gv_talents_MaxDefaultTalentProfilesPerHero_C + 1] lv_talentProfiles;
    libCore_gs_HeroTalentArrayData[libCore_gv_talents_MaxTalentsPerHero_C + 1] lv_talentBucket;
    string lv_veterencyHealthTemplateBehavior;
    text lv_name;
    text[libCore_gv_dataHeroesMaxAbilitiesPerHero + 1] lv_abilityNames;
    string[libCore_gv_dataHeroesMaxAbilitiesPerHero + 1] lv_abilityIcons;
    text[libCore_gv_dataHeroesMaxAbilitiesPerHero + 1] lv_abilityTooltips;
    int lv_metaGameTier;
    string lv_talentsUnlockReward;
    int lv_allowedMountCategoryCount;
    string[libCore_gv_data_MaxHeroAllowedMountCategories_C + 1] lv_allowedMountCategories;
    string lv_defaultMount;
    bool lv_dEBUGPlayable;
};

struct libCore_gs_HeroVO {
    string[libCore_gv_dataHeroVOMaxNumberOfHeroVOEvents + 1] lv_vOEventLines;
    string[libCore_gv_dataHeroesMaxHeroCount + 1] lv_specificHeroTakedownLines;
    string[libCore_gv_dataHeroesMaxHeroCount + 1] lv_specificHeroIntroQuestionLines;
    string[libCore_gv_dataHeroesMaxHeroCount + 1] lv_specificHeroIntroResponseLines;
};

struct libCore_gs_MinionData {
    int lv_numberOfScalingTicks;
    int[libCore_gv_dataScalingMaxScalingTicks + 1] lv_xPBuffAmount;
    string lv_unitType;
};

struct libCore_gs_MinionWaveComposition {
    bool lv_enabled;
    text lv_name;
    int lv_numberOfGroups;
    int[libCore_gv_dataMinionWaveCompositionMaxGroupCount + 1][libCore_gv_bALMaxTeams + 1] lv_groupMinionType;
    int[libCore_gv_dataMinionWaveCompositionMaxGroupCount + 1] lv_groupMinionCount;
};

struct libCore_gs_HeroMountData {
    bool lv_isFree;
    string[libCore_gv_data_MaxRequiredRewards_C + 1] lv_requiredRewardArray;
    int lv_requiredRewardCount;
    text lv_mountName;
    string lv_mountID;
    string lv_mountModel;
    fixed lv_mountModelScale;
    fixed lv_mountModelWalkAnimMoveSpeed;
    string lv_mountPoseAnimGroup;
    bool lv_noAttachedMountModel;
    string[libCore_gv_dataMountsMaxActorMessageCount + 1] lv_actorMessageArray;
    int lv_actorMessageCount;
    string lv_mountSound;
    string lv_dismountSound;
    string lv_loopingSound;
    string lv_movingSound;
    string lv_stationarySound;
    string lv_category;
};

struct libCore_gs_SkinData {
    text lv_skinName;
    string lv_skinID;
    string[libCore_gv_data_MaxRequiredRewards_C + 1] lv_requiredRewardArray;
    int lv_requiredRewardCount;
    string[libCore_gv_dataSkinsMaxActorMessageCount + 1] lv_actorMessageArray;
    int lv_actorMessageCount;
    int lv_allowedMountCategoryCount;
    string[libCore_gv_data_MaxSkinAllowedMountCategories_C + 1] lv_allowedMountCategories;
};

struct libCore_gs_AbilityModificationData {
    int[libCore_gv_talents_MaxModifedAbilitiesPerTalent_C + 1] lv_numberOfFieldChanges;
    int[libCore_gv_talents_MaxModifedAbilitiesPerTalent_C + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_changeType;
    int[libCore_gv_talents_MaxModifedAbilitiesPerTalent_C + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_catalog;
    string[libCore_gv_talents_MaxModifedAbilitiesPerTalent_C + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_entry;
    string[libCore_gv_talents_MaxModifedAbilitiesPerTalent_C + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_field;
    bool[libCore_gv_talents_MaxModifedAbilitiesPerTalent_C + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_fieldIsInteger;
    fixed[libCore_gv_talents_MaxModifedAbilitiesPerTalent_C + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_value;
    string[libCore_gv_talents_MaxModifedAbilitiesPerTalent_C + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_stringReplacementValue;
    string[libCore_gv_talents_MaxModifedAbilitiesPerTalent_C + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_catalogReplaceFrom;
    string[libCore_gv_talents_MaxModifedAbilitiesPerTalent_C + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_catalogChangeTo;
};

struct libCore_gs_TalentRankData {
    string lv_item;
    string lv_upgrade;
    int lv_behaviorCount;
    string[libCore_gv_talents_MaxTalentBehaviorsPerRank_C + 1] lv_behaviors;
    fixed lv_abilityPower;
    fixed lv_cooldownReduction;
    fixed lv_attackDamage;
    fixed lv_increaseAttackSpeed;
    fixed lv_increaseMovementSpeed;
    fixed lv_siegeDamage;
    fixed lv_lifesteal;
    fixed lv_hitPoints;
    fixed lv_shields;
    fixed lv_mana;
    fixed lv_manaRegen;
    fixed lv_hitPointRegen;
    fixed lv_hitPointRegenFraction;
};

struct libCore_gs_TalentData {
    string lv_talentCatalogLink;
    text lv_name;
    string lv_icon;
    text lv_tooltip;
    string lv_masteryAbilLink;
    int lv_rankCount;
    libCore_gs_TalentRankData lv_rankData;
    libCore_gs_AbilityModificationData lv_abilityModificationData;
    int lv_abilityModifications;
    string[libCore_gv_data_MaxRequiredRewards_C + 1] lv_requiredRewardArray;
    int lv_requiredRewardCount;
};

struct libCore_gs_TalentProfileData {
    string lv_talentProfileCatalogLink;
    text lv_name;
    bool lv_hidden;
    int lv_talentCount;
    int[libCore_gv_talents_MaxTalentPoints_C + 1] lv_talents;
};

struct libCore_gs_TalentBucketTier {
    int lv_level;
    int lv_picks;
    int lv_tierType;
};

struct libCore_gs_ABChoices {
    int lv_unlockLevel;
    int lv_numberOfButtons;
    text lv_choiceText;
    bool lv_appliesMasteryModifications;
};

struct libCore_gs_AutoRevealerData {
    revealer[64] lv_revealers;
    region[64] lv_triggeringRegions;
    int[64] lv_triggeringPlayers;
    int lv_count;
};

// Variable Declarations
bool libCore_gv_dEBUGDebuggingEnabled;
bool libCore_gv_dEBUGGameIsOnline;
int libCore_gv_sYSGameMode;
bool libCore_gv_sYSStartGame;
bool libCore_gv_sYSDisplayIntroCutscene;
bool libCore_gv_sYSTowns;
bool libCore_gv_sYSMinionAI;
bool libCore_gv_sYSCustomMinionsEnabled;
bool libCore_gv_sYSTalentsOn;
bool libCore_gv_sYSArtifactsOn;
bool libCore_gv_sYSTowerAI;
bool libCore_gv_sYSJungleCreepCamps;
bool libCore_gv_sYSJungleWatchTowers;
bool libCore_gv_sYSUseEncouragementPanel;
bool libCore_gv_sYSDataMiningListenForData;
fixed libCore_gv_sYSDeathTimerCap;
bool libCore_gv_tUTTalentsAutobuyOn;
text libCore_gv_dELETEIFYOUSEETHISONAMAPDEPRECATEDMapName;
string libCore_gv_mAPMapStringID;
string libCore_gv_mAPMapImage;
string libCore_gv_mAPMapTileset;
string libCore_gv_mAPMapLight;
string[libCore_gv_maxMapSoundtracks_C + 1] libCore_gv_mAPMapSoundtrack;
region libCore_gv_mAPOrderBaseRegion;
region libCore_gv_mAPChaosBaseRegion;
region libCore_gv_mAPFlyerOutOfBoundsRegion;
region libCore_gv_mAPExploredRegion;
string[libCore_gv_dataAnnouncerVOMaxNumberOfAnnouncerEvents + 1] libCore_gv_dataAnnouncerVODataFieldMap;
libCore_gs_AnnouncerVOPack[libCore_gv_dataAnnouncerVONumberOfAnnouncerPacks + 1] libCore_gv_dataAnnouncerVOPacks;
libCore_gs_ArtifactData[libCore_gv_artifacts_MaxArtifactEntryCount + 1] libCore_gv_artifacts_ArtifactData;
int libCore_gv_artifacts_ArtifactEntryCount;
color libCore_gv_cOLORPlayerColor;
color libCore_gv_cOLORAllyColor;
color libCore_gv_cOLOREnemyColor;
color libCore_gv_cOLORNeutralColor;
color libCore_gv_cOLORJungleCreepColor;
fixed libCore_gv_bALFaerieDragonFaerieDustHealPercentage;
fixed libCore_gv_bALJungleCreepCampActivationDelay;
fixed libCore_gv_bALGraveGolemCampActivationDelay;
int libCore_gv_dEPDataGhostStatusBarsCurrentCount;
libCore_gs_DEPGhostStatusBarsData[libCore_gv_dEPDataGhostStatusBarsMaxCount + 1] libCore_gv_dEPDataGhostStatusBarsBuffs;
int libCore_gv_dataNumberOfTalentsWithCatalogChanges;
int libCore_gv_dataHeroesNumberOfHeroes;
libCore_gs_HeroClassData[libCore_gv_dataHeroesNumberOfHeroClasses + 1] libCore_gv_dataHeroesHeroClassData;
libCore_gs_HeroData[libCore_gv_dataHeroesMaxHeroCount + 1] libCore_gv_dataHeroesHeroData;
string libCore_gv_heroes_RandomHeroID;
string[libCore_gv_dataHeroVOMaxNumberOfHeroVOEvents + 1] libCore_gv_dataHeroVODataFieldMap;
libCore_gs_HeroVO[libCore_gv_dataHeroesMaxHeroCount + 1][libCore_gv_bALMaxPlayers + 1] libCore_gv_dataHeroVO;
fixed libCore_gv_bALMinionWaveInterval;
fixed[libCore_gv_bALMaxTeams + 1] libCore_gv_bALMinionTeamSpawnDelay;
fixed libCore_gv_bALMinionScalingTimerDuration;
libCore_gs_MinionData[libCore_gv_dataMinionTypeCount + 1] libCore_gv_dataMinionData;
libCore_gs_MinionWaveComposition[libCore_gv_dataMinionWaveCompositionCount + 1] libCore_gv_dataMinionWaveCompositions;
int libCore_gv_dataMountsMountCount;
libCore_gs_HeroMountData[libCore_gv_dataMountsMaxMountCount + 1] libCore_gv_dataMountsMountData;
playergroup libCore_gv_allHeroPlayersPlusObserver;
playergroup libCore_gv_activeHumanPlayers;
playergroup libCore_gv_nPCPlayers;
playergroup[libCore_gv_bALMaxEnginePlayerCount + 1] libCore_gv_playerGroupFromPlayer;
fixed libCore_gv_bALCancelDelay;
fixed libCore_gv_bALHeroKillCreditTimeWindow;
fixed[libCore_gv_bALMaxLevel + 1] libCore_gv_bALDeathTimes;
fixed libCore_gv_bALMaxDeathTime;
trigger[libCore_gv_segregationTriggerTypesMax + 1][libCore_gv_segregationTriggerCountPerType + 1] libCore_gv_segregationTriggers;
int libCore_gv_segTriggerPlayer;
unit libCore_gv_segTriggerUnit;
point libCore_gv_segTriggerPoint;
int libCore_gv_segTriggerIndex;
int libCore_gv_dataSkinsSkinCount;
libCore_gs_SkinData[libCore_gv_dataSkinsMaxSkinCount + 1] libCore_gv_dataSkinsSkinData;
int[libCore_gv_bALMaxLevel + 1] libCore_gv_bALTalentPoints;
libCore_gs_TalentData[libCore_gv_talents_MaxTalentEntryCount_C + 1] libCore_gv_talents_TalentData;
int libCore_gv_talents_TalentEntryCount;
libCore_gs_TalentProfileData[libCore_gv_talents_MaxTalentProfileEntryCount_C + 1] libCore_gv_talents_TalentProfiles;
int libCore_gv_talents_TalentProfileCount;
libCore_gs_TalentBucketTier[libCore_gv_talentsBucket_MaxTiers_C + 1] libCore_gv_talentsBucket_TierLevels;
libCore_gs_ABChoices[libCore_gv_talents_NumberOfABChoices_C + 1] libCore_gv_aBChoices;
libCore_gs_ABChoices[libCore_gv_talentsBucket_NumberOfABChoices + 1] libCore_gv_aBChoicesBuckets;
fixed libCore_gv_talents_RelentlessCCReduction20_C;
fixed libCore_gv_talents_RelentlessCCReduction40_C;
fixed libCore_gv_talents_RelentlessCCReduction60_C;
fixed libCore_gv_talents_RelentlessCCReduction75_C;
fixed libCore_gv_talents_ResurganceOfTheStormDeathTime_C;
fixed libCore_gv_talents_EyeOfTheStormExplosionDamagePercentage;
fixed libCore_gv_talents_FuryOfTheStormBounceDamagePercent_C;
bool libCore_gv_dataXPGranularBountyXPMathDisplayEnabled;
fixed[libCore_gv_bALMaxLevel + 1] libCore_gv_dataXPLevelXPValues;
bool libCore_gv_dEBUGErrorDuringInitialization;
int libCore_gv_metagame_DefaultRotationSlots_C;
int libCore_gv_zS_SendTransmissionCampaignIndex;
int libCore_gv_zS_SendTransmissionCampaignPortrait;
unit libCore_gv_zS_SendTransmissionCampaignSpeaker;
trigger libCore_gv_zS_SendTransmissionCampaignTrigger;
int libCore_gv_zS_SendTransmissionCampaignPlayingTick;
bool libCore_gv_zS_SendTransmissionCampaignChatBubbleOn;
libCore_gs_AutoRevealerData libCore_gv_autoRevealers;

// Function Declarations
int libCore_gf_CustomValueIndex (int lp_indexName);
void libCore_gf_DataAnnouncerVOMapDataField (int lp_event, string lp_arrayIndexName);
void libCore_gf_DataInitializeAnnouncerVOPackSingle (int lp_iDPack, string lp_stringID, text lp_name);
void libCore_gf_DataAnnouncerVOSetAnnouncerPackForPlayerGroup (playergroup lp_playerGroup, int lp_announcerPack);
int libCore_gf_ArtifactsIndexFromArtifactLink (string lp_artifactLink);
string libCore_gf_ArtifactsArtifactLinkFromArtifactIndex (int lp_artifactIndex);
int libCore_gf_ArtifactsRankOfSpecificArtifactForPlayer (string lp_artifact, int lp_player);
void libCore_gf_UpdateFaerieDragonAbilityStats (int lp_player, fixed lp_damage);
void libCore_gf_UpdateTassadarAbilityStats (int lp_player);
int libCore_gf_DataHeroesExistingTalentButtonIndexForColumnAndTier (int lp_heroIndex, int lp_tier, int lp_column);
void libCore_gf_DataHeroesAddSkinPlusVariationsToHero (int lp_heroIndex, string lp_skinLink);
void libCore_gf_DataHeroesRemoveButtonFromTalentToButtonMapping (int lp_heroIndex, int lp_talentButtonIndex);
void libCore_gf_DataHeroesRemoveTalentFromHeroTalentArray (int lp_heroIndex, int lp_talentButtonIndex);
void libCore_gf_DataHeroVOMapDataField (int lp_event, string lp_arrayIndexName);
void libCore_gf_DataHeroVOReloadHeroVODataForHero (int lp_heroIndex, int lp_player);
string libCore_gf_DataMinionUnitTypeFromPreset (int lp_type);
void libCore_gf_DataInitializeScalingDataForMinion (string lp_unitType, int lp_minionType, string lp_scalingBehavior);
int libCore_gf_DataMountGetMountIndexFromMountLink (string lp_mountLink);
bool libCore_gf_DataMountMountIsValidForHeroSkin (int lp_heroIndex, int lp_skinIndex, int lp_mountIndex);
void libCore_gf_DataMountsAddMountPlusVariationsToMountList (string lp_mountLink, fixed lp_mountModelScale, fixed lp_walkAnimMoveSpeed, string lp_poseAnimGroup);
void libCore_gf_SendMountActorMessagesToActor (int lp_mountIndex, actor lp_actor);
fixed libCore_gf_HeroDeathTime (int lp_player, int lp_level);
void libCore_gf_RegisterSegregationTrigger (int lp_type, trigger lp_trigger);
void libCore_gf_CallRegisteredSegregationTriggers (int lp_type);
int libCore_gf_DataSkinsGetSkinIndexFromSkinLink (string lp_skinLink);
bool libCore_gf_DataSkinsIsSkinValidForHero (int lp_heroIndex, int lp_skinIndex);
void libCore_gf_SendSkinActorMessagesToUnit (string lp_skin, unit lp_unit);
int libCore_gf_TalentsTalentIndexFromTalentLink (string lp_talentLink);
int libCore_gf_TalentsTalentProfileIndexFromTalentProfileLink (string lp_talentProfileLink);
string libCore_gf_InitialXPDataTableName (string lp_unitType);
fixed libCore_gf_DataXPXPForUnit (unit lp_unit);
int libCore_gf_DataXPLevelGapBetweenHeroes (int lp_awardPlayer, unit lp_deadUnit);
fixed libCore_gf_DataXPGetGranularBountyXPModifier (unit lp_deadHero, unit lp_playerHero);
fixed libCore_gf_DataXPGetMoreGranularBountyXPModifier (unit lp_deadHero, unit lp_playerHero);
fixed libCore_gf_DataXPXPForHero (int lp_awardPlayer, unit lp_deadUnit);
void libCore_gf_IncludeModInitialization (trigger t);
void libCore_gf_SendEventIncludeModInitialization ();
bool libCore_gf_MetagameIsHeroInRotationForPlayer (int lp_player, int lp_heroIndex);
bool libCore_gf_MetagameDoesPlayerHaveAccessToHero (int lp_player, int lp_heroIndex);
bool libCore_gf_MetagameDoesPlayerHaveAccessToSkin (int lp_player, int lp_skinIndex);
bool libCore_gf_MetagameDoesPlayerHaveAccessToMount (int lp_player, int lp_mountIndex);
void libCore_gf_ExecuteEffectAtRandomPointsWithinCircle (string lp_effect, unit lp_casterUnit, int lp_numberOfExecutions, fixed lp_radius, point lp_centerPoint, bool lp_pointsMustBePathable);
fixed libCore_gf_GetWeaponDamageForUnit (unit lp_unit);
fixed libCore_gf_GetWeaponAttackSpeedForUnit (unit lp_unit);
int libCore_gf_CalculateGameLoopsFromReal (fixed lp_duration);
text libCore_gf_ConvertPointToText (point lp_point);
string libCore_gf_GetTimeStamp (fixed lp_time);
point libCore_gf_AdvancePointinDirection (point lp_point, point lp_dir, fixed lp_distance);
color libCore_gf_GetAllianceColorFromGameUIData (string lp_overrideColor, int lp_player);
int libCore_gf_GetNumberOfRanksOfAnAbilityAHeroHasLearned (unit lp_heroUnit, int lp_abilIndex);
string libCore_gf_GetModelLinkForUnitType (string lp_unitType);
int libCore_gf_GetHeroIndexForUnitType (string lp_heroType);
int libCore_gf_GetAbilityIndexForAbilityLink (int lp_heroIndex, string lp_abilLink);
bool libCore_gf_TestLocationClosertoFactionSide (point lp_location, int lp_faction, fixed lp_modifier);
fixed libCore_gf_StandalizedAngle (fixed lp_angle);
fixed libCore_gf_StandalizedAngleDifference (fixed lp_angle1, fixed lp_angle2);
bool libCore_gf_IsAbilityOnCooldown (unit lp_unit, string lp_ability);
fixed libCore_gf_GetTotalHPForUnitIncludingAllShields (unit lp_unit);
fixed libCore_gf_GetTotalXPForLevel (int lp_level);
int libCore_gf_GetPlayerIDfromTeamSlot (int lp_slot, int lp_team);
void libCore_gf_SendActorMessageToDoodadsInRegion (string lp_message, region lp_target, string lp_doodadType);
void libCore_gf_ClearAllNonpermanentBehaviorsonUnit (unit lp_targetUnit);
bool libCore_gf_LoadBankValueIfExistsAsBoolean (bool lp_variable, bank lp_bank, string lp_key, string lp_section);
int libCore_gf_LoadBankValueIfExistsAsInteger (int lp_variable, bank lp_bank, string lp_key, string lp_section);
fixed libCore_gf_LoadBankValueIfExistsAsReal (fixed lp_variable, bank lp_bank, string lp_key, string lp_section);
string libCore_gf_LoadBankValueIfExistsAsString (string lp_variable, bank lp_bank, string lp_key, string lp_section);
void libCore_gf_CreateMinimapPingStorm (playergroup lp_players, string lp_pingData, point lp_position, color lp_color, fixed lp_duration);
string libCore_gf_ZS_ReticleModelOfStyle (int lp_type, int lp_size);
string libCore_gf_ZS_ReticleTextFontOfStyle (int lp_type);
void libCore_gf__CreateReticleEffect (int lp_type, int lp_size, point lp_location);
void libCore_gf__AttachReticleEffect (int lp_type, int lp_size, unit lp_target, string lp_attachPoint);
void libCore_gf_CreateReticleEffectAndTextTagAtPoint (int lp_type, int lp_size, text lp_text, point lp_location);
void libCore_gf_AttachReticleEffectAndTextTagOnUnit (int lp_type, int lp_size, text lp_text, unit lp_target, string lp_attachPoint);
string libCore_gf__UnitDataName (int lp_type, unit lp_unit, int lp_index);
void libCore_gf_StoreActorForUnit (unit lp_unit, int lp_index, actor lp_actor);
actor libCore_gf_ActorStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StoreTextTagForUnit (unit lp_unit, int lp_index, int lp_textTag);
int libCore_gf_TextTagStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StorePointForUnit (unit lp_unit, int lp_index, point lp_point);
point libCore_gf_PointStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StoreRegionForUnit (unit lp_unit, int lp_index, region lp_region);
region libCore_gf_RegionStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StorePingForUnit (unit lp_unit, int lp_index, int lp_ping);
int libCore_gf_PingStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StoreIntegerForUnit (unit lp_unit, int lp_index, int lp_value);
int libCore_gf_IntegerStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StoreUnitForUnit (unit lp_unit, int lp_index, unit lp_value);
unit libCore_gf_UnitStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StoreUnitGroupForUnit (unit lp_unit, int lp_index, unitgroup lp_value);
unitgroup libCore_gf_UnitGroupStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_PlayTransmissionCueSound (playergroup lp_playerGroup);
void libCore_gf_SetAllSoundChannelVolumesStandardTiming (int lp_mode, playergroup lp_players);
bool libCore_gf_PlayerGroupOverlap (playergroup lp_group1, playergroup lp_group2);
int libCore_gf_TransmissionOwningPlayerFromPlayerGroup (playergroup lp_toPlayers);
void libCore_gf_SendTransmissionCampaign (unit lp_unit, string lp_conversationLine, int lp_durationType, fixed lp_duration, bool lp_waitUntilDone, int lp_keepPortraitVisible, int lp_cueSoundOption);
void libCore_gf_SendTransmissionCampaignPlaceHolder (unit lp_unit, string lp_model, text lp_speaker, text lp_message, fixed lp_duration, bool lp_waitUntilDone, int lp_keepPortraitVisible2, int lp_cueSoundOption2);
void libCore_gf_TurnTransmissionOptionsOnOffCampaign (int lp_option, bool lp_onOff);
void libCore_gf_ZS_SendTransmissionCampaignInternal (bool lp_isPlaceHolder, unit lp_unit, string lp_model, soundlink lp_sound, text lp_speaker, text lp_message, int lp_durationType, fixed lp_duration, bool lp_waitUntilDone, int lp_keepPortraitVisible, int lp_cueSoundOption, string lp_portraitActor);
void libCore_gf_ZS_SendTransmissionCampaignCleanUp (int lp_transmission, int lp_keepPortraitVisible, int lp_portrait, actor lp_talkIcon, actor lp_talkRing, int lp_ping, int lp_localIndex);
void libCore_gf_HideCampaignTransmissionPortrait ();
fixed libCore_gf_ConvesationLineDuration (string lp_conversationLine);
void libCore_gf_AutoRevealRegion (region lp_visibilityRegion, region lp_triggeringRegion, int lp_player);

// Trigger Declarations
trigger libCore_gt_DataAnnouncerVOMapDataFields;
trigger libCore_gt_ArtifactDataInitialization;
trigger libCore_gt_DataVehicleLevelUpScalingDragonKnight;
trigger libCore_gt_DataHeroesHeroClassData;
trigger libCore_gt_DataHeroesHeroData;
trigger libCore_gt_DataHeroVOMapDataFields;
trigger libCore_gt_DataHeroVOInitializeHeroVOData;
trigger libCore_gt_DataMinionScalingData;
trigger libCore_gt_DataMinionWaveCompositionData;
trigger libCore_gt_DataInitializeMountData;
trigger libCore_gt_DataDeathTimes;
trigger libCore_gt_DataInitializeSkinData;
trigger libCore_gt_TalentsDataInitialization;
trigger libCore_gt_TalentsProfileDataInitialization;
trigger libCore_gt_TalentsPointsPerLevelInitialization;
trigger libCore_gt_TalentsBucketTierLevelsDataInitialization;
trigger libCore_gt_TalentABChoiceDataInitialization;
trigger libCore_gt_XPValueInitializationForUnit;
trigger libCore_gt_DataEnableGranularBountyXPMathDisplay;
trigger libCore_gt_DataXPInitializeLevelXPValues;
trigger libCore_gt_InitializeStormMod;
trigger libCore_gt_InitializeDataMiningAndDebugOutput;
trigger libCore_gt_InitializeData;
trigger libCore_gt_InitializeMiscStuff;
trigger libCore_gt__SendTransmissionTick;
trigger libCore_gt_AutoRevealRegionController;

// Library Initialization
void libCore_InitVariables ();

